// For format details, see https://aka.ms/vscode-remote/devcontainer.json or the definition README at
// https://github.com/microsoft/vscode-dev-containers/tree/master/containers/docker-existing-dockerfile
{
    "name": "Fenics Stable Dockerfile",
    // Sets the run context to one level up instead of the .devcontainer folder.
    "context": "..",
    // Update the 'dockerFile' property if you aren't using the standard 'Dockerfile' filename.
    "dockerComposeFile": "../docker-compose.yml",
    "service": "stable",
    // Uncomment the next line to have VS Code connect as an existing non-root user in the container. 
    // On Linux, by default, the container user's UID/GID will be updated to match your local user. See
    // https://aka.ms/vscode-remote/containers/non-root for details on adding a non-root user if none exist.
    // "remoteUser": "vscode",
    // Uncomment the next line if you will use a ptrace-based debugger like C++, Go, and Rust
    // "runArgs": [ "--cap-add=SYS_PTRACE", "--security-opt", "seccomp=unconfined" ],
    // Uncomment the next line to use Docker from inside the container. See https://aka.ms/vscode-remote/samples/docker-in-docker for details.
    // "mounts": [ "source=/var/run/docker.sock,target=/var/run/docker.sock,type=bind" ],
    // Use 'settings' to set *default* container specific settings.json values on container create. 
    // You can edit these settings after create using File > Preferences > Settings > Remote.
    "workspaceFolder": "/home/fenics/stable",
    // Use 'appPort' to create a container with published ports. If the port isn't working, be sure
    // your server accepts connections from all interfaces (0.0.0.0 or '*'), not just localhost.
    // "appPort": [],
    // Uncomment the next line to run commands after the container is created - for example installing git.
    //"postCreateCommand": "pip install -e /workspaces/fenics_ab_initio/packages/fenics_utils",
    "postCreateCommand": "pip install -e /home/fenics/stable/shared/pkgs/fenics_utils && pip install -e /home/fenics/stable/pkgs/fenics_helpers && pip install -e /home/fenics/stable/pkgs/particle_helpers",
    // Add the IDs of extensions you want installed when the container is created in the array below.
    "extensions": [
        "ms-python.python",
        "njpwerner.autodocstring",
        "anjali.clipboard-history",
        "gruntfuggly.ubertab",
        "2gua.rainbow-brackets",
        "bertrand-thierry.vscode-gmsh",
        "mhutchie.git-graph",
        "ryuta46.multi-command",
        "eamodio.gitlens",
        "mutantdino.resourcemonitor",
        "ms-python.vscode-pylance"
    ],
    "settings":
    {
        "python.pythonPath": "/usr/bin/python3",
    
        "python.formatting.provider": "black",
        "python.testing.pytestArgs": [
            // "./shared_pkgs/fenics_utils"
            "."
        ],
        "python.testing.unittestEnabled": false,
        "python.testing.nosetestsEnabled": false,
        "python.testing.pytestEnabled": true,
        "python.languageServer": "Pylance",
        "python.dataScience.widgetScriptSources": [ "jsdelivr.com", "unpkg.com"]
    }
}